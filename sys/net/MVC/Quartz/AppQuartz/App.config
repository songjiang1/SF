<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="Schedule" type="AppQuartz.Configuration.ScheduleConfiguration, sys.Quartz"/>
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false"/>
    <section name="supermore" type="Supermore.Configuration.ConfigReader,Supermore.Data.ItemManager"/>
    <section name="cacheProvider" type="MemcachedProviders.Cache.CacheProviderSection, MemcachedProviders" allowDefinition="MachineToApplication" restartOnExternalChanges="true"/>
    <sectionGroup name="enyim.com">
      <section name="memcached" type="Enyim.Caching.Configuration.MemcachedClientSection, Enyim.Caching"/>
    </sectionGroup>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,log4net"/>
  </configSections>
  <enyim.com>
    <memcached>
      <servers>
        <!-- put your own server(s) here--> 
        <add address="127.0.0.1" port="11211"/>
        <add address="127.0.0.1" port="11212"/>
        <add address="127.0.0.1" port="11213"/>
      </servers>
      <socketPool minPoolSize="10" maxPoolSize="100" connectionTimeout="00:00:10" deadTimeout="00:02:00"/>
    </memcached>
  </enyim.com>
  <cacheProvider defaultProvider="MemcachedCacheProvider">
    <providers>
      <add name="MemcachedCacheProvider" type="MemcachedProviders.Cache.MemcachedCacheProvider, MemcachedProviders" keySuffix="_MySuffix_" defaultExpireTime="36000"/>
    </providers>
  </cacheProvider>
  <log4net>
    <appender name="ConsoleAppender" type="log4net.Appender.ConsoleAppender">
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %logger [%property{NDC}]- %message%newline"/>
      </layout>
    </appender>
    <root>
      <priority value="WARN"/>
      <appender-ref ref="ConsoleAppender">
        <filter type="log4net.Filter.LevelRangeFilter">
          <levelMin value="WARN"/>
          <levelMax value="FATAL"/>
        </filter>
      </appender-ref>
    </root>
  </log4net>
  <appSettings>
  
    <!-- CustConnFromDB  指示是否从数据库中读取，链接字串的配置  -->
    <add key="CustConnFromDB" value="true"/>

    
    <!--生产-->
    <add key="chat.appkey" value="ik1qhw09ivbhp"/>
    <add key="chat.secret" value="65830aLtculio6"/>
    <!--测试-->
    <!--<add key="chat.appkey" value="3argexb630lee"/>
    <add key="chat.secret" value="YJBl9GeX97W"/>
    <add key="Organization.ID" value="8D23D5E5-D7FB-445B-8E1B-66DB56F2FD99" />-->
     
  </appSettings>
  <supermore database="SqlServer">
    <settings> 
      <!--  统一APP推送消息用户       -->
      <setting name="AppMessage.PushUser.Unique" value="false"/>
      
      <setting name="AppMessage.PushUser" value="2ec00cf2-a484-4136-8fef-e2a2719c5ed6"/>

      <setting name="File.HR.ImportSalaryField" value="D:\Work\oaApp\chatApp\AppQuartz\Shaoxin\salaryfieldmap.xml"/>
      <setting name="File.HR.ImportSalaryBounseField" value="D:\Work\oaApp\chatApp\AppQuartz\salarybounsefieldmap.xml"/>
      <setting name="dateDiff" value="-1"/> 
      <!--定时获取token 每小时执行一次(整点整分)"0 0 * * *  ?"-->
      <setting name="autoaccess_token_time" value="0 0 * * * ?"/>
      
    </settings>
  </supermore>
  <Schedule>
    <Group>
      <!--推送 -->
      <!--<add Method="SendBroadcastMessageJob" Cron="0/1 * * * * ?" />-->
      <!--通过聊天发送推送 -->
      <!--<add Method="PublishPrivateMessageJob" Cron="0 0/2 * * * ?" />    -->
      <!--<add Method="ExecuteSql" Cron="0 0 23 * * ?" />
      <add Method="SynchronizePerformanceSalaryData" Cron="0 1 11 * * ? *" />
      <add Method="ChangzhiImportSalary" Cron="0 0/1 * * * ?" />-->

      <!--每天晚上凌晨1点计算请假，同步AM用户 -->
      <!--<add Method="SychronizeDeptUserAM" Cron="0 10 12 ? * *" />-->
      
      <!--每天晚上凌晨1点计算请假 -->
      <!--<add Method="AttenaceCalculateRequestLeave" Cron="0 15 01 ? * *" />-->
      <!--<add Method="WFCalculator" Cron="0 0/59 * * * ?" />-->
      <!--按排班检查缺卡 -->
      <!--<add Method="EmployeeWorkShiftClockCheckJob" Cron="0 0/59 * * * ?" />-->
      <!--工作日历检查缺卡 -->
      <!--<add Method="EmployeeCalendarClockCheckJob" Cron="0 0/59 3 * * ?"  />-->

      <!--定时获取token 每小时执行一次(整点整分)"0 0 * * *  ?"-->
      <!--<add Method="WeChatAccessTokenJob" Cron="0 0 * * * ?" />-->
      <!--定时向APP推送融云消息,每5分钟一次"0 0/5 * * *  ?"-->
      <add Method="SendWeChatMessageJob" Cron="0/3 * * * * ?"/>
      

    </Group>
  </Schedule>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5"/>
  </startup>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework"/>
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer"/>
    </providers>
  </entityFramework>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-9.0.0.0" newVersion="9.0.0.0"/>
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <connectionStrings>
    <!--<add name="Model1" connectionString="data source=127.0.0.1;initial catalog=Hospital;integrated security=True;MultipleActiveResultSets=True;App=EntityFramework" providerName="System.Data.SqlClient" />-->
  </connectionStrings>
</configuration>
