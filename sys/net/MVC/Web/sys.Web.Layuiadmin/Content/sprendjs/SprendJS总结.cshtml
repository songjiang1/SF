//设置背景及文本对齐方式
sheet.getRange(1, 1, 3, 10).backColor('#D9D9FF');
sheet.getRange(1, 1, 3, 10).hAlign(spreadNS.HorizontalAlign.center);
//设置行宽，高
sheet.setRowHeight(4, 0);
sheet.setColumnWidth(2, 0);

//复制粘贴
支持从Excel复制样式然后粘贴到Spread Sheets，或者从Spread Sheets复制样式然后粘贴到Excel。
如果你想使用这个功能，只需要设置Workbook的options属性的 allowCopyPasteExcelStyle 属性为true。例如：
spread.options.allowCopyPasteExcelStyle = true;
之后，你就可以从Excel复制样式或者粘贴样式到Excel。它的默认值是true

//Spread Sheets支持当粘贴区域不够的时候扩展粘贴区域。
如果你想使用这个功能，只需要设置Workbook的options属性的allowExtendPasteRange属性为true。例如：
spread.options.allowExtendPasteRange = true;
然后Spread Sheets当粘贴区域不够的时候会扩展粘贴区域。它的默认值是false。

//设置选中区域
var s=sheet.getSelections(0, 0, 3, 3);
//插入行，列
sheet.addColumns(1,2);
sheet.addRow(1,2);
//获取自定义区域
var s=sheet.getRange(0, 0, 3, 3);

//自定制打印
Spread.Sheets 提供了很多打印设置给用户，用来决定打印什么和如何打印。
1.打印什么 ?
以下内容是可以打印的:
在列头/行头/表单视图区域的可见行和可见列
单元格的文本
单元格的样式 (包括背景图)
单元格合并信息
单元格溢出文本
图片
以下内容无法被打印:
隐藏的行和列
浮动对象
备注
表单名称标签
滚动条
分组
筛选按钮
校验按钮和高亮红色提示圈
活动状态
选择
冻结线
Spread的背景图
2.如何打印
可以通过调用 Workbook的print 方法来打印整个表单或打印指定表单。
spread.print();    // print all sheets
// spread.print(1 /* sheetIndex */);  // print the 2nd sheet ( 0 based index )
在每一个表单，你可以通过调用 Worksheet的setRowPageBreak / Worksheet的setColumnPageBreak 方法在指定行和指定列插入分页符。
// insert a page break before the 6th row
sheet.setRowPageBreak(5, true);
// insert a page break before the 4th column
sheet.setColumnPageBreak(3, true);
在每一个表单，你可以通过调用Sheet.printInfo方法来这是打印的详细设定。这里是一些可选项：

呈现：
showGridLine: 是否打印网格线 (默认是打印)。
showBorder: 是否打印控件的外边框线。
showColumnHeader / showRowHeader: 是否打印列头/行头， 参数为PrintVisibilityType枚举值。
inherit: 继承自表单的设置 ((默认) 行头/列头可见)。
hide: 不打印。
show: 在每页中都显示。
showOnce: 显示一次 (在第一页)。
var sheet = spread.sheets[0];
var printInfo = sheet.printInfo();
printInfo.showGridLine(false);
printInfo.showRowHeader(GC.Spread.Sheets.Print.PrintVisibilityType.show);
printInfo.showColumnHeader(GC.Spread.Sheets.Print.PrintVisibilityType.show);
打印一个区域：
rowStart: 设定打印区域的开始行索引。

rowEnd: 设定打印区域的结束行索引。

columnStart: 设定打印区域的开始列索引。

columnEnd: 设定打印区域的结束列索引。

// set print range to override auto detected end row / column
printInfo.rowEnd(40);
printInfo.columnEnd(12)
打印重复次数：

repeatColumnStart: 设定在每页左边打印重复区域的开始列索引。

repeatColumnEnd: 设定每页左边打印重复区域的结束列索引。

repeatRowStart: 设定每页上边打印重复区域的开始行索引。

repeatRowEnd: 设定每页上边打印重复区域的结束行索引。

printInfo.repeatRowStart(0);
printInfo.repeatRowEnd(1);
printInfo.repeatColumnStart(0)
printInfo.repeatColumnEnd(0)
表头 & 表脚:

headerLeft: 表头区域左部分的文本及样式。

headerCenter: 表头区域中间部分的文本及样式。

headerRight: 表头区域右部分的文本及样式。

footerLeft: 表脚区域左部分的文本及样式。

footerCenter: 表脚区域中间部分的文本及样式。

footerRight: 表脚区域右部分的文本及样式。

headerLeftImage: 表头区域左部分的图片。

headerCenterImage: 表头区域中间部分的图片。

headerRightImage: 表头区域右部分的图片。

footerLeftImage: 表脚区域左部分的图片。

footerCenterImage: 表脚区域中间部分的图片。

footerRightImage: 表脚区域右部分的图片。

supported format: & 被用作为特殊的转义字符，用来转义以下打印特殊数据的关键字。

P: 当前页数。
N: 总页数。
D: 当前日期。（今天）
T: 当前时间。
G: 图片，用来显示相应区域图片（XXXImage）的占位符。
S: 删除线。
U: 下划线。
B: 粗体。
I: 斜体。
": (双引号)，用来设置字体。
F: Spread的名字。
A: 表单名字。
printInfo.headerCenter("&\"Comic Sans MS\"System Information");
printInfo.headerLeft("&G");
printInfo.headerLeftImage("images/GrapeCity_LOGO.jpg");
printInfo.footerCenter("&P/&N");



//合并
sheet.getSpans()获取合并的单元格

//导出JSON
function exportToJSON() {
    var json = spread.toJSON({includeBindingSource: true}),
        text = JSON.stringify(json);
    var fileName = getFileName();
    if (isSafari) {
        showModal(uiResource.toolBar.downloadTitle, DOWNLOAD_DIALOG_WIDTH, $("#downloadDialog").children(), function () {
            $("#downloadDialog").hide();
        });
        var link = $("#download");
        link[0].href = "data:text/plain;" + text;
    } else {
        saveAs(new Blob([text], {type: "text/plain;charset=utf-8"}), fileName + ".json");
    }
}
//导出Excel
function exportToExcel() {
    var fileName = getFileName();
    var json = spread.toJSON({includeBindingSource: true});
    excelIO.save(json, function (blob) {
        if (isSafari) {
            var reader = new FileReader();
            reader.onloadend = function () {
                showModal(uiResource.toolBar.downloadTitle, DOWNLOAD_DIALOG_WIDTH, $("#downloadDialog").children(), function () {
                    $("#downloadDialog").hide();
                });
                var link = $("#download");
                link[0].href = reader.result;
            };
            reader.readAsDataURL(blob);
        } else {
            saveAs(blob, fileName + ".xlsx");
        }
    }, function (e) {
        alert(e);
    });
}
function getFileName() {
    function to2DigitsString(num) {
        return ("0" + num).substr(-2);
    }

    var date = new Date();
    return [
        "export",
        date.getFullYear(), to2DigitsString(date.getMonth() + 1), to2DigitsString(date.getDate()),
        to2DigitsString(date.getHours()), to2DigitsString(date.getMinutes()), to2DigitsString(date.getSeconds())
    ].join("");
}
var isSafari = (function () {
    var tem, M = navigator.userAgent.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i) || [];
    if (!/trident/i.test(M[1]) && M[1] !== 'Chrome') {
        M = M[2] ? [M[1], M[2]] : [navigator.appName, navigator.appVersion, '-?'];
        if ((tem = navigator.userAgent.match(/version\/(\d+)/i)) != null) M.splice(1, 1, tem[1]);
        return M[0].toLowerCase() === "safari";
    }
    return false;
})();

//获取配置文件 ajax请求
 $.ajax({
      type: "GET",
      dataType: "json",
      url: "111.json",
      success: function (result) {
@*console.log(result)*@
      }
    });

//获取配置文件  $.getJSON获取
$.getJSON("111.json",function(data){
@*console.log(data);*@
})



ClipboardPasteOptions


all//粘贴所有数据对象，包括值，格式和公式。
formatting	//仅粘贴格式。
formulas	//仅粘贴公式。
formulasAndFormatting	//粘贴公式和格式。
values	//仅粘贴值。
valuesAndFormatting	 //粘贴值和格式。




可以把默认theme 的font改掉
GC.Spread.Sheets.Themes.Office.bodyFont("宋体")